/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DB_GUI;

import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Toshiba
 */
public class myDB_GUI extends javax.swing.JFrame {

    /**
     * Creates new form myDB_GUI
     */
Connection con;
Statement stmt;
PreparedStatement pstmt; 
    public myDB_GUI() {
        initComponents();
        ConnectToDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        IDTF = new javax.swing.JTextField();
        FNTF = new javax.swing.JTextField();
        LNTF = new javax.swing.JTextField();
        AgeTF = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        AddB = new javax.swing.JButton();
        UpdateB = new javax.swing.JButton();
        DeleteB = new javax.swing.JButton();
        ListB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add User", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 204, 204))); // NOI18N

        jLabel1.setText("ID:");

        jLabel2.setText("First Name:");

        jLabel3.setText("Last Name:");

        jLabel4.setText("Age:");

        IDTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDTFActionPerformed(evt);
            }
        });

        AgeTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgeTFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AgeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LNTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FNTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IDTF, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {AgeTF, FNTF, IDTF, LNTF});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(IDTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FNTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LNTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AgeTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        AddB.setText("Add");
        AddB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBActionPerformed(evt);
            }
        });

        UpdateB.setText("Modify");
        UpdateB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBActionPerformed(evt);
            }
        });

        DeleteB.setText("Delete");
        DeleteB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBActionPerformed(evt);
            }
        });

        ListB.setText("List");
        ListB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddB)
                    .addComponent(UpdateB)
                    .addComponent(DeleteB)
                    .addComponent(ListB))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {AddB, DeleteB, ListB, UpdateB});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AddB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(UpdateB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DeleteB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ListB)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IDTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDTFActionPerformed

    private void AddBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBActionPerformed
        // TODO add your handling code here:
        try{
            
            if (!IDTF.getText().isEmpty() && !FNTF.getText().isEmpty() && !LNTF.getText().isEmpty() && !AgeTF.getText().isEmpty())
            {
            int id = Integer.parseInt(IDTF.getText());
            String FN = FNTF.getText();
            String LN = LNTF.getText();
            int age = Integer.parseInt(AgeTF.getText());
            int count;
            //String sql = "INSERT INTO Users VALUES ( " + id + ", '" + FN + "', '" + LN + "', '" + age + "')";
            String sql = "INSERT INTO Users VALUES(?,?,?,?)";
            pstmt = con.prepareStatement(sql);
            pstmt.setInt(1, id);
            pstmt.setString(2, FN);
            pstmt.setString(3, LN);
            pstmt.setInt(4, age);
            count = pstmt.executeUpdate();
            

            if(count >0)
            //JOptionPane.showMessageDialog(null,"The Employee was added Successfully !");
            JOptionPane.showMessageDialog(this, "The User was added Successfully !", "Success Message", JOptionPane.INFORMATION_MESSAGE);
            else
            JOptionPane.showMessageDialog(this, "Insert Query Execution Failed", "Execution Alert", JOptionPane.ERROR_MESSAGE);
            }
            
            else
            JOptionPane.showMessageDialog(this, "Failed to Add \nAll Fields are Mandatory", "Execution Alert", JOptionPane.ERROR_MESSAGE);    
        }
        catch (SQLIntegrityConstraintViolationException e) {
            // Duplicate entry
            JOptionPane.showMessageDialog(this, "Failed to Add \nDuplicate ID !", "Execution Alert", JOptionPane.ERROR_MESSAGE);
        }
        catch(SQLException err)
        {
            System.out.println(err.getMessage());
            JOptionPane.showMessageDialog(this, "Insert Query Execution Failed", "Execution Alert", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_AddBActionPerformed

    private void DeleteBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBActionPerformed
        // TODO add your handling code here:
       try{
            
            if (!IDTF.getText().isEmpty())
            {
            int id = Integer.parseInt(IDTF.getText());
            
            int count;
            //String sql = "INSERT INTO Users VALUES ( " + id + ", '" + FN + "', '" + LN + "', '" + age + "')";
            String sql = "DELETE FROM Users WHERE ID = ?";
            pstmt = con.prepareStatement(sql);
            pstmt.setInt(1, id);
            count = pstmt.executeUpdate();
            
            if(count >0)
            JOptionPane.showMessageDialog(this, "The User was DELETED Successfully !", "Success Message", JOptionPane.INFORMATION_MESSAGE);
            else
            JOptionPane.showMessageDialog(this, "No record was found with the given ID", "Execution Alert", JOptionPane.ERROR_MESSAGE);
            }
            
            else
            JOptionPane.showMessageDialog(this, "ERROR \nID must be entered", "Execution Alert", JOptionPane.ERROR_MESSAGE);    
        }
        
        catch(SQLException err)
        {
            System.out.println(err.getMessage());
            JOptionPane.showMessageDialog(this, "DELETE Query Execution Failed", "Execution Alert", JOptionPane.ERROR_MESSAGE);
        } 
    }//GEN-LAST:event_DeleteBActionPerformed

    private void ListBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListBActionPerformed
        // TODO add your handling code here:
        
       ListF Frame = new ListF() ;
       Frame.setVisible(true);
    }//GEN-LAST:event_ListBActionPerformed

    private void AgeTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgeTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AgeTFActionPerformed

    private void UpdateBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBActionPerformed
        // TODO add your handling code here:
        try{
            
            if (!IDTF.getText().isEmpty() && !FNTF.getText().isEmpty() && !LNTF.getText().isEmpty() && !AgeTF.getText().isEmpty())
            {
            int id = Integer.parseInt(IDTF.getText());
            String FN = FNTF.getText();
            String LN = LNTF.getText();
            int age = Integer.parseInt(AgeTF.getText());
            int count;
            //String sql = "INSERT INTO Users VALUES ( " + id + ", '" + FN + "', '" + LN + "', '" + age + "')";
            String sql = "UPDATE Users SET FNAME = ?, LNAME = ?, AGE= ? WHERE ID = ?";
                    
            pstmt = con.prepareStatement(sql);
            pstmt.setString(1, FN);
            pstmt.setString(2, LN);
            pstmt.setInt(3, age);
            pstmt.setInt(4, id);
            //boolean ret = stmt.execute(sql);
            //if(ret == true)
            //{
            count = pstmt.executeUpdate();
            

            if(count >0)
            JOptionPane.showMessageDialog(this, "The record was UPDATED Successfully !", "Success Message", JOptionPane.INFORMATION_MESSAGE);
            else
            JOptionPane.showMessageDialog(this, "No record was found with the given ID", "Execution Alert", JOptionPane.ERROR_MESSAGE);
            }
            else
            JOptionPane.showMessageDialog(this, "All Fields MUST be filled", "Execution Alert", JOptionPane.ERROR_MESSAGE);    
        }
        
        catch(SQLException err)
        {
            System.out.println(err.getMessage());
            JOptionPane.showMessageDialog(this, "Update Query Execution Failed", "Execution Alert", JOptionPane.ERROR_MESSAGE);
        }
    
    }//GEN-LAST:event_UpdateBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(myDB_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(myDB_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(myDB_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(myDB_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new myDB_GUI().setVisible(true);
            }
        });
    }
    private void ConnectToDB()
    {
        try{
        String host = "jdbc:derby://localhost:1527/DBuserscontaining";
        String username = "Khouloud";
        String password = "123";
        con =  DriverManager.getConnection(host,username,password);
        stmt = con.createStatement( );
        }
         catch(SQLException err) 
                {
                    System.out.println(err.getMessage());
                }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddB;
    private javax.swing.JTextField AgeTF;
    private javax.swing.JButton DeleteB;
    private javax.swing.JTextField FNTF;
    private javax.swing.JTextField IDTF;
    private javax.swing.JTextField LNTF;
    private javax.swing.JButton ListB;
    private javax.swing.JButton UpdateB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
